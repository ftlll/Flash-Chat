definitions:
  service.CreateUserRequest:
    properties:
      email:
        type: string
      name:
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
      repassword:
        type: string
    required:
    - email
    - name
    - password
    - repassword
    type: object
info:
  contact: {}
paths:
  /index:
    get:
      description: ping testing
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: ping testing
      tags:
      - Ping
  /users/createUser:
    post:
      consumes:
      - application/json
      description: create new user
      parameters:
      - description: User Info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/service.CreateUserRequest'
      produces:
      - application/json
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: ""
      tags:
      - Users
  /users/deleteUser:
    delete:
      description: delete existing user by ID
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: ""
      tags:
      - Users
  /users/getUsers:
    get:
      description: get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: ""
      tags:
      - Users
swagger: "2.0"
